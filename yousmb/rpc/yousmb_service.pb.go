// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: yousmb_service.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{0}
}

type BaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Reason  *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
}

func (x *BaseReply) Reset() {
	*x = BaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseReply) ProtoMessage() {}

func (x *BaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseReply.ProtoReflect.Descriptor instead.
func (*BaseReply) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{1}
}

func (x *BaseReply) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *BaseReply) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string           `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Fields map[string]string `protobuf:"bytes,2,rep,name=fields" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{2}
}

func (x *Section) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Section) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sections []*Section `protobuf:"bytes,1,rep,name=sections" json:"sections,omitempty"`
}

func (x *ConfigReply) Reset() {
	*x = ConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReply) ProtoMessage() {}

func (x *ConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReply.ProtoReflect.Descriptor instead.
func (*ConfigReply) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigReply) GetSections() []*Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

type AddConfigMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string           `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Properties map[string]string `protobuf:"bytes,2,rep,name=Properties" json:"Properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *AddConfigMessage) Reset() {
	*x = AddConfigMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigMessage) ProtoMessage() {}

func (x *AddConfigMessage) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigMessage.ProtoReflect.Descriptor instead.
func (*AddConfigMessage) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{4}
}

func (x *AddConfigMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AddConfigMessage) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type RemoveConfigMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
}

func (x *RemoveConfigMessage) Reset() {
	*x = RemoveConfigMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveConfigMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveConfigMessage) ProtoMessage() {}

func (x *RemoveConfigMessage) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveConfigMessage.ProtoReflect.Descriptor instead.
func (*RemoveConfigMessage) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveConfigMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type AddUserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *string `protobuf:"bytes,1,req,name=Username" json:"Username,omitempty"`
	Password *string `protobuf:"bytes,2,req,name=Password" json:"Password,omitempty"`
}

func (x *AddUserMessage) Reset() {
	*x = AddUserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserMessage) ProtoMessage() {}

func (x *AddUserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserMessage.ProtoReflect.Descriptor instead.
func (*AddUserMessage) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{6}
}

func (x *AddUserMessage) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *AddUserMessage) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type GetUserListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=Success" json:"Success,omitempty"`
	Users   []*User `protobuf:"bytes,2,rep,name=Users" json:"Users,omitempty"`
}

func (x *GetUserListReply) Reset() {
	*x = GetUserListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListReply) ProtoMessage() {}

func (x *GetUserListReply) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListReply.ProtoReflect.Descriptor instead.
func (*GetUserListReply) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserListReply) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *GetUserListReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *string `protobuf:"bytes,1,req,name=Username" json:"Username,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{8}
}

func (x *User) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type RemoveUserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *string `protobuf:"bytes,1,req,name=Username" json:"Username,omitempty"`
}

func (x *RemoveUserMessage) Reset() {
	*x = RemoveUserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserMessage) ProtoMessage() {}

func (x *RemoveUserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserMessage.ProtoReflect.Descriptor instead.
func (*RemoveUserMessage) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveUserMessage) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type StatusProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PID      *string           `protobuf:"bytes,1,req,name=PID" json:"PID,omitempty"`
	Username *string           `protobuf:"bytes,2,req,name=Username" json:"Username,omitempty"`
	Group    *string           `protobuf:"bytes,3,req,name=Group" json:"Group,omitempty"`
	Machine  *string           `protobuf:"bytes,4,req,name=Machine" json:"Machine,omitempty"`
	Raw      map[string]string `protobuf:"bytes,5,rep,name=raw" json:"raw,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *StatusProcess) Reset() {
	*x = StatusProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusProcess) ProtoMessage() {}

func (x *StatusProcess) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusProcess.ProtoReflect.Descriptor instead.
func (*StatusProcess) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{10}
}

func (x *StatusProcess) GetPID() string {
	if x != nil && x.PID != nil {
		return *x.PID
	}
	return ""
}

func (x *StatusProcess) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *StatusProcess) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *StatusProcess) GetMachine() string {
	if x != nil && x.Machine != nil {
		return *x.Machine
	}
	return ""
}

func (x *StatusProcess) GetRaw() map[string]string {
	if x != nil {
		return x.Raw
	}
	return nil
}

type StatusShares struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   *string           `protobuf:"bytes,1,req,name=Service" json:"Service,omitempty"`
	PID       *string           `protobuf:"bytes,2,req,name=PID" json:"PID,omitempty"`
	Machine   *string           `protobuf:"bytes,3,req,name=Machine" json:"Machine,omitempty"`
	ConnectAt *string           `protobuf:"bytes,4,req,name=ConnectAt" json:"ConnectAt,omitempty"`
	Raw       map[string]string `protobuf:"bytes,5,rep,name=raw" json:"raw,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *StatusShares) Reset() {
	*x = StatusShares{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusShares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusShares) ProtoMessage() {}

func (x *StatusShares) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusShares.ProtoReflect.Descriptor instead.
func (*StatusShares) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{11}
}

func (x *StatusShares) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *StatusShares) GetPID() string {
	if x != nil && x.PID != nil {
		return *x.PID
	}
	return ""
}

func (x *StatusShares) GetMachine() string {
	if x != nil && x.Machine != nil {
		return *x.Machine
	}
	return ""
}

func (x *StatusShares) GetConnectAt() string {
	if x != nil && x.ConnectAt != nil {
		return *x.ConnectAt
	}
	return ""
}

func (x *StatusShares) GetRaw() map[string]string {
	if x != nil {
		return x.Raw
	}
	return nil
}

type SMBStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool            `protobuf:"varint,1,req,name=Success" json:"Success,omitempty"`
	Process []*StatusProcess `protobuf:"bytes,2,rep,name=Process" json:"Process,omitempty"`
	Shares  []*StatusShares  `protobuf:"bytes,3,rep,name=Shares" json:"Shares,omitempty"`
}

func (x *SMBStatusReply) Reset() {
	*x = SMBStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMBStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMBStatusReply) ProtoMessage() {}

func (x *SMBStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMBStatusReply.ProtoReflect.Descriptor instead.
func (*SMBStatusReply) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{12}
}

func (x *SMBStatusReply) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *SMBStatusReply) GetProcess() []*StatusProcess {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *SMBStatusReply) GetShares() []*StatusShares {
	if x != nil {
		return x.Shares
	}
	return nil
}

type ServiceInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=Success" json:"Success,omitempty"`
	Name    *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
	Status  *string `protobuf:"bytes,3,req,name=Status" json:"Status,omitempty"`
}

func (x *ServiceInfoReply) Reset() {
	*x = ServiceInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yousmb_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfoReply) ProtoMessage() {}

func (x *ServiceInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_yousmb_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfoReply.ProtoReflect.Descriptor instead.
func (*ServiceInfoReply) Descriptor() ([]byte, []int) {
	return file_yousmb_service_proto_rawDescGZIP(), []int{13}
}

func (x *ServiceInfoReply) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ServiceInfoReply) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServiceInfoReply) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

var File_yousmb_service_proto protoreflect.FileDescriptor

var file_yousmb_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62,
	0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x48, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2f, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x03, 0x50, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x30, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x61, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x72,
	0x61, 0x77, 0x1a, 0x36, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdb, 0x01, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x03, 0x50, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x74, 0x12,
	0x2f, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79,
	0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x52, 0x61, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x72, 0x61, 0x77,
	0x1a, 0x36, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x53, 0x4d, 0x42,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x06, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xf6,
	0x03, 0x0a, 0x0d, 0x59, 0x6f, 0x75, 0x53, 0x4d, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x31, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0d, 0x2e,
	0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x79,
	0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x11, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x2e, 0x79, 0x6f,
	0x75, 0x73, 0x6d, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1b, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e,
	0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d,
	0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53,
	0x4d, 0x42, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x79, 0x6f, 0x75, 0x73, 0x6d, 0x62,
	0x2e, 0x53, 0x4d, 0x42, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x79,
	0x6f, 0x75, 0x73, 0x6d, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x79, 0x6f,
	0x75, 0x73, 0x6d, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x72, 0x70, 0x63,
}

var (
	file_yousmb_service_proto_rawDescOnce sync.Once
	file_yousmb_service_proto_rawDescData = file_yousmb_service_proto_rawDesc
)

func file_yousmb_service_proto_rawDescGZIP() []byte {
	file_yousmb_service_proto_rawDescOnce.Do(func() {
		file_yousmb_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yousmb_service_proto_rawDescData)
	})
	return file_yousmb_service_proto_rawDescData
}

var file_yousmb_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_yousmb_service_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: yousmb.Empty
	(*BaseReply)(nil),           // 1: yousmb.BaseReply
	(*Section)(nil),             // 2: yousmb.Section
	(*ConfigReply)(nil),         // 3: yousmb.ConfigReply
	(*AddConfigMessage)(nil),    // 4: yousmb.AddConfigMessage
	(*RemoveConfigMessage)(nil), // 5: yousmb.RemoveConfigMessage
	(*AddUserMessage)(nil),      // 6: yousmb.AddUserMessage
	(*GetUserListReply)(nil),    // 7: yousmb.GetUserListReply
	(*User)(nil),                // 8: yousmb.User
	(*RemoveUserMessage)(nil),   // 9: yousmb.RemoveUserMessage
	(*StatusProcess)(nil),       // 10: yousmb.StatusProcess
	(*StatusShares)(nil),        // 11: yousmb.StatusShares
	(*SMBStatusReply)(nil),      // 12: yousmb.SMBStatusReply
	(*ServiceInfoReply)(nil),    // 13: yousmb.ServiceInfoReply
	nil,                         // 14: yousmb.Section.FieldsEntry
	nil,                         // 15: yousmb.AddConfigMessage.PropertiesEntry
	nil,                         // 16: yousmb.StatusProcess.RawEntry
	nil,                         // 17: yousmb.StatusShares.RawEntry
}
var file_yousmb_service_proto_depIdxs = []int32{
	14, // 0: yousmb.Section.fields:type_name -> yousmb.Section.FieldsEntry
	2,  // 1: yousmb.ConfigReply.sections:type_name -> yousmb.Section
	15, // 2: yousmb.AddConfigMessage.Properties:type_name -> yousmb.AddConfigMessage.PropertiesEntry
	8,  // 3: yousmb.GetUserListReply.Users:type_name -> yousmb.User
	16, // 4: yousmb.StatusProcess.raw:type_name -> yousmb.StatusProcess.RawEntry
	17, // 5: yousmb.StatusShares.raw:type_name -> yousmb.StatusShares.RawEntry
	10, // 6: yousmb.SMBStatusReply.Process:type_name -> yousmb.StatusProcess
	11, // 7: yousmb.SMBStatusReply.Shares:type_name -> yousmb.StatusShares
	0,  // 8: yousmb.YouSMBService.GetConfig:input_type -> yousmb.Empty
	4,  // 9: yousmb.YouSMBService.AddFolderConfig:input_type -> yousmb.AddConfigMessage
	4,  // 10: yousmb.YouSMBService.UpdateFolderConfig:input_type -> yousmb.AddConfigMessage
	5,  // 11: yousmb.YouSMBService.RemoveFolderConfig:input_type -> yousmb.RemoveConfigMessage
	6,  // 12: yousmb.YouSMBService.AddUser:input_type -> yousmb.AddUserMessage
	9,  // 13: yousmb.YouSMBService.RemoveUser:input_type -> yousmb.RemoveUserMessage
	0,  // 14: yousmb.YouSMBService.GetSMBStatus:input_type -> yousmb.Empty
	0,  // 15: yousmb.YouSMBService.GetInfo:input_type -> yousmb.Empty
	3,  // 16: yousmb.YouSMBService.GetConfig:output_type -> yousmb.ConfigReply
	1,  // 17: yousmb.YouSMBService.AddFolderConfig:output_type -> yousmb.BaseReply
	1,  // 18: yousmb.YouSMBService.UpdateFolderConfig:output_type -> yousmb.BaseReply
	1,  // 19: yousmb.YouSMBService.RemoveFolderConfig:output_type -> yousmb.BaseReply
	1,  // 20: yousmb.YouSMBService.AddUser:output_type -> yousmb.BaseReply
	1,  // 21: yousmb.YouSMBService.RemoveUser:output_type -> yousmb.BaseReply
	12, // 22: yousmb.YouSMBService.GetSMBStatus:output_type -> yousmb.SMBStatusReply
	13, // 23: yousmb.YouSMBService.GetInfo:output_type -> yousmb.ServiceInfoReply
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_yousmb_service_proto_init() }
func file_yousmb_service_proto_init() {
	if File_yousmb_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yousmb_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveConfigMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusShares); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMBStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yousmb_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yousmb_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yousmb_service_proto_goTypes,
		DependencyIndexes: file_yousmb_service_proto_depIdxs,
		MessageInfos:      file_yousmb_service_proto_msgTypes,
	}.Build()
	File_yousmb_service_proto = out.File
	file_yousmb_service_proto_rawDesc = nil
	file_yousmb_service_proto_goTypes = nil
	file_yousmb_service_proto_depIdxs = nil
}
